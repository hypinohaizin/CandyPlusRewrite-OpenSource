package me.hypinohaizin.candyplusrewrite.module.exploit;

import net.minecraft.network.play.client.CPacketHeldItemChange;
import me.hypinohaizin.candyplusrewrite.module.combat.CivBreaker;
import me.hypinohaizin.candyplusrewrite.module.combat.CevBreaker;
import me.hypinohaizin.candyplusrewrite.CandyPlusRewrite;
import me.hypinohaizin.candyplusrewrite.utils.InventoryUtil;
import net.minecraft.init.Items;
import net.minecraft.util.EnumHand;
import me.hypinohaizin.candyplusrewrite.utils.Timer;
import me.hypinohaizin.candyplusrewrite.setting.Setting;
import me.hypinohaizin.candyplusrewrite.module.Module;

public class SilentPickel extends Module
{
    public Setting<Float> delay;
    public Setting<Boolean> noGap;
    public Setting<Boolean> noPA;
    public Timer timer;
    public int oldslot;
    public EnumHand oldhand;
    
    public SilentPickel() {
        super("SilentPickel", Categories.EXPLOIT, false, false);
        delay = register(new Setting<>("Delay", 3.0f, 25.0f, 0.0f));
        noGap = register(new Setting<>("NoGapSwitch", true));
        noPA = register(new Setting<>("NoPASwitch", true));
        oldslot = -1;
        oldhand = null;
    }
    
    @Override
    public void onEnable() {
        timer = new Timer();
    }
    
    @Override
    public void onUpdate() {
        if (nullCheck()) {
            return;
        }
        final int pickel = InventoryUtil.getItemHotbar(Items.DIAMOND_PICKAXE);
        if (pickel == -1) {
            return;
        }
        if (SilentPickel.mc.player.inventory.getCurrentItem().getItem() == Items.GOLDEN_APPLE && noGap.getValue()) {
            return;
        }
        final Module cev = CandyPlusRewrite.m_module.getModuleWithClass(CevBreaker.class);
        final Module civ = CandyPlusRewrite.m_module.getModuleWithClass(CivBreaker.class);
        if (cev.isEnable || civ.isEnable) {
            return;
        }
        if (InstantMine.FourZeroFourBlock != null) {
            if (SilentPickel.mc.player.inventory.getCurrentItem().getItem() != Items.DIAMOND_PICKAXE) {
                setItem(pickel);
            }
            final InstantMine mine = (InstantMine) CandyPlusRewrite.m_module.getModuleWithClass(InstantMine.class);
            mine.update();
            restoreItem();
        }
    }
    
    public void setItem(final int slot) {
        oldhand = null;
        if (SilentPickel.mc.player.isHandActive()) {
            oldhand = SilentPickel.mc.player.getActiveHand();
        }
        oldslot = SilentPickel.mc.player.inventory.currentItem;
        SilentPickel.mc.player.connection.sendPacket(new CPacketHeldItemChange(slot));
    }
    
    public void restoreItem() {
        if (oldslot != -1) {
            if (oldhand != null) {
                SilentPickel.mc.player.setActiveHand(oldhand);
            }
            SilentPickel.mc.player.connection.sendPacket(new CPacketHeldItemChange(oldslot));
            oldslot = -1;
            oldhand = null;
        }
    }
}
